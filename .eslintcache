[{"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/index.js":"1","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/App.js":"2","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/reportWebVitals.js":"3","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/contexts/AuthContext.js":"4","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/Dashboard.js":"5","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/PrivateRoute.js":"6","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/auth/SignUp.js":"7","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/auth/Login.js":"8","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/firebase.js":"9","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/content/DesignerContent.js":"10","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/content/CustomerContent.js":"11","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/projectComponents/AddPage.js":"12","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/projectComponents/DesignsView.js":"13","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/ProjectPage.js":"14"},{"size":547,"mtime":1608543370941,"results":"15","hashOfConfig":"16"},{"size":796,"mtime":1608732897837,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1608542451553,"results":"18","hashOfConfig":"16"},{"size":1372,"mtime":1608661043680,"results":"19","hashOfConfig":"16"},{"size":1834,"mtime":1608847900914,"results":"20","hashOfConfig":"16"},{"size":463,"mtime":1608542685190,"results":"21","hashOfConfig":"16"},{"size":3657,"mtime":1608657961563,"results":"22","hashOfConfig":"16"},{"size":2047,"mtime":1608657178444,"results":"23","hashOfConfig":"16"},{"size":507,"mtime":1608906052239,"results":"24","hashOfConfig":"16"},{"size":3043,"mtime":1608894278871,"results":"25","hashOfConfig":"16"},{"size":1982,"mtime":1608846492669,"results":"26","hashOfConfig":"16"},{"size":2255,"mtime":1608894108331,"results":"27","hashOfConfig":"16"},{"size":1711,"mtime":1608847199363,"results":"28","hashOfConfig":"16"},{"size":4489,"mtime":1608847515541,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"12xijbw",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/index.js",[],["65","66"],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/App.js",[],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/reportWebVitals.js",[],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/contexts/AuthContext.js",[],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/Dashboard.js",["67","68","69"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport DesignerContent from './content/DesignerContent'\nimport CustomerContent from './content/CustomerContent'\n\n\nexport default function Dashboard() {\n    const [error, setError] = useState('')\n    const { currentUser, logout } = useAuth()\n    const history = useHistory()\n    const [role, setRole] = useState('')\n    const [roleProp, setRoleProp] = useState('')\n    \n    useEffect((users) => {\n        firebase.database().ref('/users/'+currentUser.uid).on(\"value\", (snapshot) => {\n            setRole(snapshot.val().role);\n        });\n    }, [])\n    \n    async function handleLogout(){\n        setError('')\n        try {\n            await logout()\n            history.push('/login')\n        }catch {\n            setError('Failed to Logout')\n        }\n    }\n\n    function LoadGraph(){\n        if(role === 'customer'){\n            return <CustomerContent />\n        } else if (role === 'designer'){\n            return <DesignerContent />\n        }\n    }\n\n    return (\n        <div className=\"App container d-flex align-items-center justify-content-center\">\n            <div className =\"w-100\" style = {{maxWidth: \"500px\"}}>\n                <div className = \"card\">      \n                    {role && <LoadGraph />}\n                    {error && <div className = \"alert alert-danger\">{error}</div>}\n                    <strong>Email: {currentUser.email}</strong> \n                    <div className = \"w-100 text-center mt-2\">\n                        <button className = \"btn btn-warning\" onClick = {handleLogout}>Log Out</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/PrivateRoute.js",[],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/auth/SignUp.js",[],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/auth/Login.js",[],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/firebase.js",[],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/content/DesignerContent.js",["70"],"import React, { useState, useEffect } from 'react'\nimport AddPage from '../projectComponents/AddPage'\nimport { useAuth } from '../../contexts/AuthContext'\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport 'firebase/storage';\nimport { useHistory } from 'react-router-dom'\n\nexport default function DesignerContent() {\n    const [adding, setAdding] = useState(false)\n    const [buttonSign, setButtonSign] = useState('+')\n    const { currentUser } = useAuth()\n    const [designs, setDesigns] = useState([]);\n    let counter = 0;\n    const history = useHistory()\n\n    useEffect(()=>{\n         loadProjects()\n    }, [])\n\n    function loadProjects(){\n        setDesigns([])\n        var projects = firebase.database().ref('/projects');\n        projects.on('value', (snapshot)=>{\n            let dsgn = []\n            snapshot.forEach((snap)=>{\n                const projectsObject = snap.val();\n                if(currentUser.uid === snap.key){\n                    for (var key in projectsObject){\n                        if (projectsObject.hasOwnProperty(key)){\n                            projectsObject[key].uid= currentUser.uid\n                            projectsObject[key].pid= key\n                            dsgn.push(projectsObject[key])\n                        }\n                    }\n                }\n            })\n            setDesigns(designs => dsgn)\n        })\n    }\n\n    function handleClick(){\n        if(adding){\n            setAdding(false)\n            setButtonSign('+')\n        }else {\n            setAdding(true)\n            setButtonSign('-')\n        }\n    }\n\n    function handleProjectClick(props){\n        history.push({\n            pathname:'/project',\n            project: {uid: props.uid,\n                      pid: props.pid,\n                      title: props.title,\n                      url: props.pr,\n                      description: props.description\n                    }\n        })\n    }\n\n    function deleteProject(props){\n        firebase.database().ref('/projects/'+currentUser.uid+'/'+props.pid).remove()\n        firebase.storage().ref().child('/'+currentUser.uid+'/'+props.name).delete()\n    }\n\n    return (\n        <div>\n            <h2>Projects:</h2>\n            <div className='projectSection'>\n                {designs.map((project)=>{\n                    return <div className='card p-1 w-75 mx-auto mb-3'  key = {counter++}>\n                        {project.title}\n                        <p>\n                            <button onClick={()=>deleteProject(project)} className='btn btn-outline-danger w-25 mx-auto mt-2' >delete</button>\n                            <button onClick={()=>handleProjectClick(project)} className='btn btn-outline-primary w-25 mx-auto mt-2' >open</button>\n                        </p>\n                    </div>\n                        \n                })}\n            </div>\n            <button onClick = {handleClick} className = 'btn btn-outline-primary w-100 '>{buttonSign}</button>\n            {adding && <AddPage />}\n        </div>\n    )\n}\n\n\n\n","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/content/CustomerContent.js",[],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/projectComponents/AddPage.js",["71"],"import React, { useRef, useState, useEffect }  from 'react'\nimport  firebase from 'firebase/app';\nimport 'firebase/storage';\nimport \"firebase/database\";\nimport { useAuth } from '../../contexts/AuthContext'\n\n\nexport default function AddPage() {\n    const titleRef = useRef()\n    const descriptionRef = useRef()\n    const designRef = useRef()\n    const [fileUrl, setFileUrl] = useState()\n    const { currentUser } = useAuth()\n    const [loading, setLoading] = useState(false)\n    const [fileName, setFileName] = useState('')\n\n    const handleFileChange = async (e) =>{\n        setLoading(true)\n        const file = e.target.files[0]\n        const storageRef = firebase.storage().ref('/'+currentUser.uid)\n        const fileRef = storageRef.child(file.name)\n        await fileRef.put(file)\n        setFileName(file.name)\n        setFileUrl(await fileRef.getDownloadURL())\n        setLoading(false)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        firebase.database().ref('/projects/' + currentUser.uid ).push({\n            title: titleRef.current.value,\n            description: descriptionRef.current.value,\n            pr: fileUrl,\n            name: fileName\n        })\n        titleRef.current.value=''\n        descriptionRef.current.value=''\n        designRef.current.value=null\n    }\n    \n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor = \"title\" className=\"form-label\">Project title</label>\n                <input ref = {titleRef} className=\"form-control\" type=\"text\" id=\"title\" required/>\n                \n                <label htmlFor = \"description\" className=\"form-label\">Project description</label>\n                <input ref = {descriptionRef} className=\"form-control\" type=\"text\" id=\"description\" required/>\n                \n                <p className='mt-2'><label htmlFor = \"design\" className=\"form-label\">Design File</label></p>\n                <input onChange={handleFileChange} ref = {designRef}  type=\"file\" id=\"design\" required/>\n                \n                <button disabled = {loading} className = 'btn btn-outline-primary m-3'>Submit Project</button>\n                <p hidden = {!loading}>Loading...</p>\n            </form>\n        </div>\n    )\n}\n",["72","73"],"/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/projectComponents/DesignsView.js",["74"],"import React, { useEffect, useState } from 'react'\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { useHistory } from 'react-router-dom'\n\n\nexport default function DesignsView(props) {\n    const [designs, setDesigns] = useState([]);\n    let counter = 0\n    const history = useHistory()\n\n    useEffect(()=>{\n        loadProjects()\n    }, [])\n\n    function loadProjects(){\n        setDesigns([])\n        var projects = firebase.database().ref('/projects');\n        projects.on('value', (snapshot)=>{\n            let dsgn = []\n            snapshot.forEach((snap)=>{\n                const projectsObject = snap.val();\n                if(props.id === snap.key){\n                    for (var key in projectsObject){\n                        if (projectsObject.hasOwnProperty(key)){\n                            projectsObject[key].uid= props.id\n                            projectsObject[key].pid= key\n                            dsgn.push(projectsObject[key])\n                        }\n                    }\n                }\n            })\n            setDesigns(designs => dsgn)\n        })\n    }\n\n    function handleProject(props){\n        history.push({\n            pathname:'/project',\n            project: {uid: props.uid,\n                      pid: props.pid,\n                      title: props.title,\n                      url: props.pr,\n                      description: props.description\n                    }\n        })\n    }\n\n    return (\n        <div>\n            {designs.map((project)=>{\n                return <p onClick = {()=>handleProject(project)} className='card clickable p-1 w-75 mx-auto mb-3' key = {counter++}>{project.title}</p>\n            })}\n        </div>\n    )\n}\n","/home/tullio/Desktop/lavoro/VLK/projects/designapp/src/components/ProjectPage.js",["75","76","77"],"import React , { useEffect, useState, useRef }from 'react'\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { useAuth } from '../contexts/AuthContext'\nimport { useHistory } from 'react-router-dom'\n\nexport default function ProjectPage(props) {\n    const { currentUser } = useAuth()\n    const [author, setAuthor] = useState({})\n    const commentRef = useRef()\n    const history = useHistory()\n    const[comments, setComments] = useState([])\n    const[commenter, setCommenter] = useState({})\n    let counter = 0\n\n    useEffect(()=>{\n        retrieveAuthor();\n        retrieveComments()\n        retrieveCommenter()\n    }, [])\n\n    function retrieveAuthor(){\n        if(props.location.project){\n            var user = firebase.database().ref('/users/'+props.location.project.uid)\n            user.once('value', (snapshot) => {\n                setAuthor({name: snapshot.val().name, surname: snapshot.val().surname})\n            })\n        }\n    }\n\n    function retrieveComments(){\n        if(props.location.project){\n            var comments = firebase.database().ref('/projects/'+props.location.project.uid + '/' + props.location.project.pid+'/comments');\n            comments.on('value', (snapshot)=>{\n                let msgs = [];\n                snapshot.forEach((snap)=>{\n                    msgs.push(snap.val());\n                })\n                setComments(comments => msgs);\n            })\n        }\n    }\n\n    function retrieveCommenter(){\n        var commentAuthor = firebase.database().ref('/users/'+currentUser.uid).on('value', (snapshot)=>{\n            setCommenter({name: snapshot.val().name, surname: snapshot.val().surname})\n        })\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        firebase.database().ref('/projects/'+ props.location.project.uid + '/' + props.location.project.pid +'/comments/').push({\n            author: commenter.name + ' ' +commenter.surname,\n            comment: commentRef.current.value\n        })\n        commentRef.current.value = ''\n    }\n\n    const handleBack = (e) =>{\n        e.preventDefault()\n        history.push('/')\n    }\n\n    if(! props.location.project){\n        history.push('/')\n        return <div>No project selected</div>\n    }else {\n        return (            \n            <div>\n                <div className='row w-100 h-100'>\n                    <div className='col card m-3 ml-4 p-3'>\n                        <div className='row text-center align-item-center mx-auto'>Comment Section</div>\n                        <div className='p-1 commentSection'>\n                            {comments && comments.map(comment=>{\n                                return <div className='card p-1 w-100 mx-auto mb-3' key={counter++} >\n                                            <p className='card-text'>{comment.comment}</p> \n                                            <p className='card-text'><em>{comment.author}</em></p> \n                                       </div>\n                            })}\n                        </div>\n                        <form onSubmit = {handleSubmit}>\n                        <div className=\"input-group mb-3\">\n                            <input ref= {commentRef} type=\"text\" className=\"form-control\" placeholder=\"Your comment...\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"/>\n                            <div className=\"input-group-append\">\n                                <button className=\"btn btn-outline-secondary\">Add</button>\n                            </div>\n                        </div>\n                        </form>\n                    </div>\n                    <div className='col-9'>\n                        <div className = 'row'>\n                            <div className='col'><strong>Title: </strong>{props.location.project.title}</div>\n                            <div className='col'><strong>Description: </strong>{props.location.project.description}</div>\n                            <div className='col'><strong>Author: </strong>{author.name} {author.surname}</div>\n                        </div>\n                        <div className='row card text-center align-item-center '>\n                            <img className=' mx-auto w-100 h-100' src={props.location.project.url} />\n                            <button onClick={handleBack} className='btn btn-warning'>Go back...</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )}\n    }",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":15,"column":12,"nodeType":"84","messageId":"85","endLine":15,"endColumn":20},{"ruleId":"82","severity":1,"message":"86","line":15,"column":22,"nodeType":"84","messageId":"85","endLine":15,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":21,"column":8,"nodeType":"89","endLine":21,"endColumn":10,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":19,"column":8,"nodeType":"89","endLine":19,"endColumn":10,"suggestions":"92"},{"ruleId":"82","severity":1,"message":"93","line":1,"column":35,"nodeType":"84","messageId":"85","endLine":1,"endColumn":44},{"ruleId":"78","replacedBy":"94"},{"ruleId":"80","replacedBy":"95"},{"ruleId":"87","severity":1,"message":"91","line":14,"column":8,"nodeType":"89","endLine":14,"endColumn":10,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":20,"column":8,"nodeType":"89","endLine":20,"endColumn":10,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"99","line":45,"column":13,"nodeType":"84","messageId":"85","endLine":45,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":97,"column":29,"nodeType":"102","endLine":97,"endColumn":102},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'roleProp' is assigned a value but never used.","Identifier","unusedVar","'setRoleProp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'loadProjects'. Either include it or remove the dependency array.",["106"],"'useEffect' is defined but never used.",["103"],["104"],["107"],"React Hook useEffect has missing dependencies: 'retrieveAuthor', 'retrieveCommenter', and 'retrieveComments'. Either include them or remove the dependency array.",["108"],"'commentAuthor' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [currentUser.uid]",{"range":"116","text":"117"},"Update the dependencies array to be: [loadProjects]",{"range":"118","text":"119"},{"range":"120","text":"119"},"Update the dependencies array to be: [retrieveAuthor, retrieveCommenter, retrieveComments]",{"range":"121","text":"122"},[756,758],"[currentUser.uid]",[632,634],"[loadProjects]",[361,363],[641,643],"[retrieveAuthor, retrieveCommenter, retrieveComments]"]